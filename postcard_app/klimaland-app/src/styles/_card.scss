@import "_config.scss";

//reusable styles
@mixin postcard {
    z-index: -10;
    transition: 0.2s;
    background-color: $light;
    border: 1px solid $taz-orange;
    border-radius: 6px;
    box-shadow: map-get($map: $boxshadow, $key: default);
    
    &:hover{
        transition: 0.2s;
        box-shadow: map-get($map: $boxshadow, $key: hover);
    }

}

@mixin stacked-postcard{
    position: absolute;
    transition: 1000ms;
}

.carousel-container{
    position: absolute;
    width: 100%;
    height: 100%;
    margin-top: 5rem;
}

.card-container{
    width: 100%;
    height: 100%;
    padding: 15px 10px 20px 0px;
    margin: 0;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
    align-content: center;
    overflow: hidden;
    
    &.carousel{
        // if carousel removes flex specs
        flex-direction: unset;
        flex-wrap: nowrap;
        padding: 0;
    }
}

// flipping
.card{
    position: absolute;

    &-active{
        // scaling to avoid overflow
        transform: translateY(0px) scale(0.99);
        z-index: 1;
        opacity: 1;
        @include stacked-postcard;
    }

    &-left{
        transform: rotate(-5deg) scale(1);
        z-index: -2;
        @include stacked-postcard;

        .card-front, 
        .card-back {
            opacity: 0;
        }
    }
    
    &-right{
        transform: rotate(5deg) scale(1);
        z-index: -1;
        @include stacked-postcard;

        .card-front, 
        .card-back {
            opacity: 0;
        }
    }

    &-back{
        transform: rotate(-2deg)  translate(-2px, -5px) scale(1);;
        z-index: -3;
        @include stacked-postcard;

        .card-front,
        .card-back {
                opacity: 0;
        }
    }

    &-ordered{
        //original ratio changed for styling
        width: $thumbnail-postcardwith;
        height: calc($thumbnail-postcardwith/1.5);
        position: relative;
        z-index: 0;

        &:hover {
            z-index: 999;
        }
    }
}

.card-preview {

    @include postcard;

    height: 100%;
    width: 100%;
    display:flex; //for using flex stretch below

    .side-inner {
        background-color: $lighter-orange;
        clip-path: circle(30%);    
    }
}

.side {
    padding-left: 0.5em;
}

.side-container{

    @include postcard;

    //148mm x 105mm (ratio 1.4)
    width: $postcardview-postcardwidth; //60vw
    height: calc($postcardview-postcardwidth/1.4);
    // margin: 0.5em;
    
    transform-style: preserve-3d;
    -webkit-transform-style: preserve-3d;
    transform: perspective(1000px) rotateY(var(--rotate-y, 0)) ;
    -webkit-transform: perspective(1000px) rotateY(var(--rotate-y, 0)) ;
    transition: transform ease 500ms;
    transition: -webkit-transform ease 500ms;
    box-shadow: -4px 4px 0px rgba(246, 161, 25, 0.4);

    &:hover {
        box-shadow: -4px 4px 0px rgba(246, 161, 25, 0.4);    
    }


    &.flip{
        //flipped boxshader, no shader on hover
        box-shadow: map-get($map: $boxshadow, $key: default);
    }

    & .card-front, .card-back{
        position: absolute; 
        width: 100%;
        height: 100%;
        margin: 0;
        display:flex; //for using flex stretch below
        backface-visibility: hidden;
        transform: rotateX(0deg);  //fix backface visibility firefox
    }

    & .card-back{
        transform: rotateY(180deg);
    }

    &-ordered{
        margin:1rem;
    }
}

.card-active {
    .side-inner {
        width: 100%;
        
        // back-side with explanation
        .details-container {
            display: flex;
            height: 100%;
            .text-container {
                width: 60%;
                height: 100%;
                overflow: scroll;
                border-right: 2px solid $taz-orange;
                .text-inner-container {
                    margin: 10px;

                    .section-title {
                        // width: 80%;
                        text-align: center;
                        margin: 40px 10px 40px 10px;
                        border: 1px solid $taz-orange;
                        border-radius: 450px / 70px;
                    }

                    .section-text {
                        margin: 20px;
                        p {
                            font-size: 20px;
                        }
                    }
                }
            }
            
            .data-container {
                width: 40%;
                height: 100%;
                overflow-y: scroll;
                overflow-x: hidden;

                .locator-map {
                    border-bottom: 2px solid $taz-orange;
                }

                .lk-list {
                    margin: 0px 0px 0px 0px;
                    .list-inner-container {

                        .list-similar-container, .list-dissimilar-container {
                            h4 {
                                padding-left: 10px;
                            }
                        }

                        ol {
                            padding-bottom: 10px;
                            border-bottom: 1px solid $taz-orange;
                        }
                    }
                }
            }
        }

        // CSS Transition classes
        &.side-transition-enter {
            opacity: 0;
        }

        &.side-transition-enter-active, 
        &.side-transition-enter-done {
            opacity: 1;
            transition: opacity 20ms;
        }

        &.side-transition-exit {
            opacity: 1;
            transition: opacity 20ms;
        }

        &.side-transition-exit-active {
            opacity: 0;
            transition: opacity 20ms;
        }
    }
}


